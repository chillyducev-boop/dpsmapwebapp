// Telegram bot logic (node-telegram-bot-api)
import TelegramBot from 'node-telegram-bot-api';

export function setupBot(token, webAppUrl) {
  const bot = new TelegramBot(token, { polling: true });

  const menuKeyboard = {
    reply_markup: {
      keyboard: [
        [{ text: 'üìç –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É', web_app: { url: webAppUrl } }],
        [{ text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é', request_location: true }]
      ],
      resize_keyboard: true
    }
  };

  bot.onText(/\/start/, (msg) => {
    bot.sendMessage(msg.chat.id,
      '–ö–∞—Ä—Ç–∞ –î–ü–° ‚Äî –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –û—Ç–∫—Ä–æ–π –∫–∞—Ä—Ç—É, —Å–º–æ—Ç—Ä–∏ —Ç–æ—á–∫–∏ –∏ –¥–æ–±–∞–≤–ª—è–π –Ω–æ–≤—ã–µ.',
      menuKeyboard
    );
  });

  bot.on('location', async (msg) => {
    const { latitude, longitude } = msg.location || {};
    if (!latitude) return;
    const payload = { lat: latitude, lng: longitude, type: 'stationary', created_at: Date.now(), source: 'tg_location' };
    try {
      await fetch(process.env.WEB_APP_URL + '/api/points', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload)
      });
      bot.sendMessage(msg.chat.id, '–¢–æ—á–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ.');
    } catch (e) {
      bot.sendMessage(msg.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ—á–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  });

  return bot;
}
